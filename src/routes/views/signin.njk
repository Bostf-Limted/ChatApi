{% extends "__index.njk" %}

{% block innerHead %}
    <link rel="stylesheet" href="/assets/css/loading.css" />
    <link rel="stylesheet" href="/assets/css/signin.css" />
{% endblock innerHead %}

{% block content %}
    <section id="signin" class='row content'>
        <div class='col-6 content-container'>
        </div>
        <div class='col-4 text-center' x-data="{ login: true, name: '', surname: '', email: '', password: '', repassword, loginEmail: '', loginPassowrd:'' }">
            <div x-show="!$store.user.value && !$store.user.loading" class='forms'>
                <div class='row' style='margin-bottom: 30px;'>
                    <div class='col-5 pe-1'><button x-on:click='login = true' x-bind:class='login ? "btn-white options-btn" : "btn-outline-white options-btn"'>Login</button></div>
                    <div class='col-5 ps-1'><button x-on:click='login = false' x-bind:class='!login ? "btn-white options-btn" : "btn-outline-white options-btn"'>Sign Up</button></div>
                </div>
                <form x-show='login' class="slidin">
                    <label for='email'>Email:</label><br>
                    <input x-model="loginEmail" type='email' id='loginEmail' name='email'><br>
                    <label for='password'>Password:</label><br>
                    <input x-model="loginPassowrd" type='password' id='loginPassowrd' name='password'>
                    <button id="loginBtn" x-on:click="$store.user.login(loginEmail, loginPassowrd);" type="button" class='options-btn btn-white'>Login</button>
                </form>
                <form x-show='!login' class="slidin" style="display:none">
                    <label for='name'>Name:</label><br>
                    <input x-model="name" type='text' id='name' name='name' required><br>
                    <label for='surname'>Surname:</label><br>
                    <input x-model="surname" type='text' id='surname' name='surname' required><br>
                    <label for='email'>Email:</label><br>
                    <input x-model="email" type='email' id='email' name='email' required><br>
                    <label for='password'>Password:</label><br>
                    <input x-model="password" type='password' id='password' name='password' required>
                    <label for='repassword'>Renter Password:</label><br>
                    <input x-model="repassword" type='password' id='repassword' name='repassword' required>
                    <button x-on:click="$store.user.signup(name, surname, email, password, repassword)" type="button" class='options-btn btn-white'>Submit</button>
                </form>
            </div>
            <div x-show="$store.user.loading" class="forms" style="display: none;">
                {% include "components/__loading.njk" %}
            </div>
        </div>
    </section>
    <script>
        document.addEventListener("alpine:init", ()=>{
            Alpine.store(
                "user", {
                    loading: false,
                    value: undefined,
                    login(email, password){
                        this.loading = true;
                        const details = { email: email, password: password };
                        const options = { method: 'POST', headers: { 'Content-Type': 'application/json', }, body: JSON.stringify(details), };
                        fetch("/api/user/login", options).then(response => response.json()).then(data =>{
                            this.loading = false;
                            console.log(data);
                            this.value = data;
                        });
                    },
                    logout(){
                        this.value = undefined;
                    },
                    signup(name, surname, email, password, repassword){
                        if(!name.length){
                            alert("Name field cannot be empty");
                        }else if(!surname.length){
                            alert("Surname field cannot be empty");
                        }else if(!email.length){
                            alert("Email field cannot be empty");
                        }else if(!password.length){
                            alert("Passowrd field cannot be empty");
                        }else if(password !== repassword){
                            alert("Passowrd Mismatch");
                        }else{
                            this.loading = true;
                            const details = { name: name,  surname: surname, email: email, password: password };
                            const options = { method: 'POST', headers: { 'Content-Type': 'application/json', }, body: JSON.stringify(details), };
                            fetch('/api/user', options).then(response => response.json()).then(data =>{
                                this.loading = false;
                                console.log(data);
                                this.value = data;
                            });
                        }
                    }
                }
            );
        });
    </script>
{% endblock content %}