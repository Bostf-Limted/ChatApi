// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User{
  id                String        @unique()
  lastSeen          DateTime      @default(now())

  organization      Organization  @relation(fields: [organizationID], references: [id])  
  organizationID    Int

  sender            Channel[]     @relation("ChannelSender")
  reveiver          Channel[]     @relation("ChannelReceiver")
  sentChats         Chat[]
  createdGroups     Group[]
  sentGroupChats    GroupChat[]
  members           Member[]
  
  @@id([id, organizationID])
}

model Organization{
  id                Int           @id @default(autoincrement())
  name              String        @default("public")

  users             User[]       
  groups            Group[]
  chennels          Channel[]
}

model Chat {
  id                Int           @id @default(autoincrement())
  message           String
  received          Boolean       @default(false)
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt

  sender            User          @relation(fields: [senderID], references: [id])
  senderID          String

  channel           Channel

  reply             Chat[]        @relation("reference")
  referenceID       Int?
  reference         Chat?         @relation("reference", fields: [referenceID], references: [id])
}

model Channel {
  sender            User          @relation("ChannelSender", fields: [senderID], references: [id])
  senderID          String

  receiver          User          @relation("ChannelReceiver", fields: [receiverID], references: [id])
  receiverID        String

  organization      Organization  @relation(fields: [organizationID], references: [id])  
  organizationID    Int

  chats             Chat[]

  @@id([senderID, receiverID])
}

model Group {
  id                Int           @id @default(autoincrement())
  name              String
  isPrivate         Boolean       @default(false)
  lastCommented     DateTime      @default(now())
  attachment        String?

  creatorID         String
  creator           User         @relation(fields: [creatorID], references: [id])

  organizationID    Int
  organization      Organization  @relation(fields: [organizationID], references: [id])

  chats             GroupChat[]
  members           Member[]
}

model GroupChat {
  id                Int           @id @default(autoincrement())
  message           String

  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt

  senderID          String
  sentder           User          @relation(fields: [senderID], references: [id])

  groupID           Int
  group             Group         @relation(fields: [groupID], references: [id])

  reply             GroupChat[]   @relation("reference")
  referenceID       Int?
  reference         GroupChat?    @relation("reference", fields: [referenceID], references: [id])
}

model Member{
  user              User         @relation(fields: [userID], references: [id])
  userID            String

  group             Group        @relation(fields: [groupID], references: [id])  
  groupID           Int

  @@id([userID, groupID])
}
